# -*- coding: utf-8 -*-
"""finalcode3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tnNvT_GuHgNAAwZdMiFKzXA_XcbHVxjV
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# Title of the app
st.title("Mental Health Data Visualization by State")

# Load data directly from file
data = pd.read_csv('./CleanedMHData(Sheet1) (1).csv') 

if data is not None:
    st.write("### Data Preview")
    st.dataframe(data)

    # Clean column names to avoid issues
    data.columns = data.columns.str.strip()  # Remove leading/trailing spaces
    data.columns = data.columns.str.lower()  # Convert to lowercase for consistency

    # Display data preview
    st.write("### Data Preview")
    st.dataframe(data)

    # State dropdown for filtering
    state = st.selectbox("Select State", data['state'].unique())

    # Filter data for the selected state
    state_data = data[data['state'] == state]

    if state_data.empty:
        st.error("No data available for the selected state.")
    else:
        # Define X and Y columns
        x_column = 'total number of survey respondents'
        y_column = 'percentage with mental distress'

        # Check if the columns exist
        if x_column not in state_data.columns or y_column not in state_data.columns:
            st.error("Required columns not found in the dataset. Please check your file.")
        else:
            # Generate the title dynamically
            years = ", ".join(sorted(state_data['year'].astype(str).unique()))
            chart_title = f"{state} for Years: {years}"

            # Select graph type
            graph_type = st.selectbox(
                "Select Graph Type",
                ["Line", "Scatter", "Bar", "Pie"]
            )

            # Plot button
            if st.button("Plot Graph"):
                fig, ax = plt.subplots()

                if graph_type == "Line":
                    for year in sorted(state_data['year'].unique()):
                        year_data = state_data[state_data['year'] == year]
                        ax.plot(year_data[x_column], year_data[y_column], label=f"Year {year}", marker='o')
                elif graph_type == "Scatter":
                    for year in sorted(state_data['year'].unique()):
                        year_data = state_data[state_data['year'] == year]
                        ax.scatter(year_data[x_column], year_data[y_column], label=f"Year {year}")
                elif graph_type == "Bar":
                    for year in sorted(state_data['year'].unique()):
                        year_data = state_data[state_data['year'] == year]
                        ax.bar(year_data[x_column], year_data[y_column], label=f"Year {year}")
                elif graph_type == "Pie":
                    # Remove '%' and convert y_column to numeric
                    state_data[y_column] = state_data[y_column].str.replace('%', '').astype(float)

                    # Group data by 'year' and calculate the mean of the y_column
                    pie_data = state_data.groupby('year')[y_column].mean()

                    # Check if pie_data is valid
                    if pie_data.isnull().all():
                        st.error("No valid numeric data available for the selected state to plot a pie chart.")
                    else:
                        # Plot the pie chart
                        ax.pie(
                            pie_data,
                            labels=pie_data.index,
                            autopct='%1.1f%%',
                            startangle=90
                        )
                        ax.set_title(chart_title)

                # Set titles and labels
                ax.set_title(chart_title)
                ax.set_xlabel("Total Number of Survey Respondents")
                ax.set_ylabel("Percentage With Mental Distress")
                ax.legend(title="Year")

                st.pyplot(fig)

else:
    st.info("Please upload a CSV file to get started.")
